* Docker Notes

** Installation

*** Add GPG key

#+BEGIN_SRC shaell
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#+END_SRC

*** Add Docker repo to APT sources

Create a new file in =/etc/apt/sources.list.d/= called =docker.list=
#+BEGIN_SRC shell
sudo tee /etc/apt/sources.list.d/docker.list << EOF
deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable
# deb-src [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable
EOF
#+END_SRC

#+NAME: Missing Docker package
It is possible that the stable docker repo for your new-fangled Ubuntu distro is not available,
in which case you can add nightly repo as well to stable or use the repo for an older distro

*** Update the package database

#+BEGIN_SRC shell
sudo apt-get update
#+END_SRC

*** Verify that you are about to install from the Docker repo instead of the default Ubuntu one

#+BEGIN_SRC shell
apt-cache policy docker-ce
#+END_SRC

The output should be similar to the following:

#+BEGIN_EXAMPLE
docker-ce:
  Installed: (none)
  Candidate: 17.03.1~ce-0~ubuntu-xenial
  Version table:
     17.03.1~ce-0~ubuntu-xenial 500
        500 https://download.docker.com/linux/ubuntu xenial/stable amd64 Packages
     17.03.0~ce-0~ubuntu-xenial 500
        500 https://download.docker.com/linux/ubuntu xenial/stable amd64 Packages
#+END_EXAMPLE

If you are unable to find the docker-ce package, refer to the comments in [[Missing Docker package]]

*** Install Docker

#+BEGIN_SRC shell
sudo apt-get install docker-ce
#+END_SRC

*** Verify Docker installation

#+BEGIN_SRC shell
sudo service docker status
#+END_SRC

*** Executing Docker without sudo

To execute Docker without having to sudo, you need to add your user to the docker group
#+BEGIN_SRC shell
sudo usermod -aG docker ${USER}
#+END_SRC
List the user's groups to verify that the user has now been added to the docker group
(requires logging out and logging in again or you can use =su - ${USER}=)
#+BEGIN_SRC shell
id -nG ${USER}
#+END_SRC

** Install =docker-compose=

=docker-compose= is required to run several cooperating services. You can find the latest version of =docker-compose= [[https://github.com/docker/compose/releases][here]].

#+BEGIN_SRC shell
DOCKER_COMPOSE_VER='1.24.1'
sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VER}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
#+END_SRC

** Install =docker-machine=

=docker-machine= is required to manage docker swarm nodes. You can find the latest version of =docker-machine= [[https://github.com/docker/machine/releases/][here]].

#+BEGIN_SRC shell
DOCKER_MACHINE_VER='0.16.1'
sudo curl -L https://github.com/docker/machine/releases/download/v${DOCKER_MACHINE_VER}/docker-machine-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-machine
sudo chmod +x /usr/local/bin/docker-machine
#+END_SRC

*** Install the Linode driver for =docker-machine=

Required to be able to create and provision Linodes with =docker-machine=. You can find the latest version of the driver [[https://github.com/linode/docker-machine-driver-linode/releases][here]].

#+BEGIN_SRC shell
sudo apt install unzip
DOCKER_MACHINE_LINODE_DRIVER_VER='0.1.8'
curl -L https://github.com/linode/docker-machine-driver-linode/releases/download/v${DOCKER_MACHINE_LINODE_DRIVER_VER}/docker-machine-driver-linode_linux-amd64.zip -o /tmp/docker-machine-driver-linode_linux-amd64.zip
unzip -d /tmp/docker-machine-driver-linode-linux/ /tmp/docker-machine-driver-linode_linux-amd64.zip 
sudo cp /tmp/docker-machine-driver-linode-linux/docker-machine-driver-linode /usr/local/bin/docker-machine-driver-linode
#+END_SRC shell

** Basic Usage

*** Display help and help options
#+BEGIN_SRC shell
sudo docker --help
sudo docker <sub-command> --help
#+END_SRC

*** View system-wide information about docker
#+BEGIN_SRC shell
sudo docker info
#+END_SRC

*** Search for image on DockerHub
#+BEGIN_SRC shell
sudo docker search <image-name>
#+END_SRC

*** Pull an image from DockerHub
#+BEGIN_SRC shell
sudo docker pull <image-name>
#+END_SRC

*** List all downloaded images
#+BEGIN_SRC shell
sudo docker images
#+END_SRC

*** Run an image in a new container
#+BEGIN_SRC shell
sudo docker run <image-name>
#+END_SRC

*** List running docker containers
#+BEGIN_SRC shell
sudo docker ps
#+END_SRC
